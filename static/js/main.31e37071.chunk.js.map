{"version":3,"sources":["components/side-menu/side-menu.component.jsx","components/constant.js","components/bank-list/bank-list-row.component.jsx","components/bank-list/bank-list.component.jsx","components/dropdown-menu/dropdown-menu.component.jsx","pages/homepage/homepage.component.jsx","components/services.js","pages/bank-details/bank-details.component.jsx","pages/favorites/favorites.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SideMenu","history","useHistory","useState","activeItem","setActiveItem","handleItemClick","e","name","push","Menu","vertical","size","Item","active","onClick","CITY_OPTIONS","text","value","CATEGORIES","BankListRow","bank","bank_name","ifsc","branch","bank_id","address","favorite","Table","Row","textAlign","Cell","width","data-favorite","Icon","color","data-bank","BankList","data","city","query_string","favoriteActionHandler","bankData","activePage","setActivePage","paginatedData","setPaginatedData","rowSize","useEffect","startIndex","endIndex","slice","Container","celled","unstackable","selectable","inverted","Header","HeaderCell","Body","target","dataset","pathname","state","map","Footer","fullWidth","colSpan","className","type","length","Math","ceil","Pagination","totalPages","floated","onPageChange","DropdownMenu","props","options","placeholder","others","sessionStorage","getItem","Dropdown","search","selection","defaultValue","Homepage","setCity","originalData","setOriginalData","setBankData","category","setCategory","query","setQuery","setItem","getCacheData","localStorage","JSON","parse","Promise","resolve","fetch","then","response","json","getBankDetails","cacheData","modifiedData","transformData","stringify","filter","toLowerCase","includes","style","marginTop","onChange","Search","showNoResults","onSearchChange","disabled","banks","forEach","favoriteBanks","index","findIndex","splice","BankDetails","useParams","location","useLocation","height","Card","margin","raised","Content","header","Meta","content","description","extra","Favorites","allFavouriteBanks","App","exact","from","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31e37071.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst SideMenu  = () => {\r\n  const history = useHistory();\r\n  const [activeItem, setActiveItem] = useState('');\r\n  const handleItemClick = ((e,{name})=>{\r\n    setActiveItem(name)\r\n    if(name==='All Banks')\r\n    {history.push('/all-banks')}\r\n    else\r\n    {history.push('/favorites')}\r\n  })\r\n\r\n    return (\r\n      <Menu vertical size={'large'}>\r\n        <Menu.Item\r\n          name='All Banks'\r\n          active={activeItem === 'All Banks'}\r\n          onClick={handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name='Favorites'\r\n          active={activeItem === 'Favorites'}\r\n          onClick={handleItemClick}\r\n        />\r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default SideMenu","export const CITY_OPTIONS = [\r\n    {text: 'Mumbai', value:'MUMBAI'},\r\n    {text: 'Ranchi', value:'RANCHI'},\r\n    {text: 'Bangalore', value:'BANGALORE'},\r\n    {text: 'Hyderabad', value:'HYDERABAD'},\r\n    {text: 'Pune', value:'PUNE'},\r\n  ]\r\n\r\nexport const CATEGORIES = [\r\n    { text: 'IFSC', value: 'ifsc'},\r\n    { text: 'Branch', value: 'branch'},\r\n    { text: 'Bank Name', value: 'bank_name'},\r\n    { text: 'Bank ID', value: 'bank_id'}\r\n]\r\n\r\nexport const DEFAULT_CITY = 'MUMBAI'\r\n\r\nexport const DEFAULT_ROW_SIZE = 10","import React from 'react';\r\nimport { Table,Icon} from 'semantic-ui-react';\r\n\r\nconst BankListRow = ({bank})=>{\r\n    const {bank_name,ifsc,branch,bank_id,address,favorite} = bank;\r\n    return(\r\n        <Table.Row textAlign=\"center\">\r\n           <Table.Cell width={1} data-favorite={`${ifsc}`}>\r\n            <Icon name={`star ${!favorite?'outline':''}`} color={'yellow'} size='large' data-favorite={`${ifsc}`}/>\r\n           </Table.Cell>\r\n           <Table.Cell width={3} data-bank={`${ifsc}`}>{bank_name}</Table.Cell>\r\n           <Table.Cell width={3} data-bank={`${ifsc}`}>{ifsc}</Table.Cell>\r\n           <Table.Cell width={3} data-bank={`${ifsc}`}>{branch}</Table.Cell>\r\n           <Table.Cell width={3} data-bank={`${ifsc}`}>{bank_id}</Table.Cell>\r\n           <Table.Cell width={3} data-bank={`${ifsc}`}>{address}</Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default BankListRow;","import React, {useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Table, Container, Pagination } from 'semantic-ui-react';\r\nimport BankListRow from './bank-list-row.component';\r\nimport { DEFAULT_ROW_SIZE} from '../constant'\r\n\r\nimport './bank-list.styles.css'\r\n\r\nconst BankList = ({data,city,query_string,favoriteActionHandler}) => {\r\n\r\n    const bankData = data,\r\n    [activePage, setActivePage] = useState(1),\r\n    [paginatedData, setPaginatedData] = useState([]),\r\n    [rowSize, setRowSize] = useState(DEFAULT_ROW_SIZE),\r\n    history = useHistory();\r\n    \r\n    const handlePageChange = (e, {activePage})=>{\r\n        setActivePage(activePage);\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      debugger\r\n      const startIndex = (activePage-1)*rowSize,\r\n      endIndex=startIndex+rowSize;\r\n      setPaginatedData(bankData.slice(startIndex,endIndex))\r\n    }, [activePage,bankData, rowSize])\r\n\r\n    useEffect(() => {\r\n      if(query_string){\r\n        setActivePage(1)\r\n      }\r\n    }, [query_string])\r\n\r\n    useEffect(() => {\r\n      setActivePage(1)\r\n      \r\n    }, [city])\r\n\r\n    \r\n\r\n    return (\r\n        <Container>\r\n        <Table celled unstackable selectable inverted>\r\n        <Table.Header>\r\n          <Table.Row textAlign=\"center\">\r\n            <Table.HeaderCell>FAVORITE</Table.HeaderCell>\r\n            <Table.HeaderCell>BANK</Table.HeaderCell>\r\n            <Table.HeaderCell>IFSC</Table.HeaderCell>\r\n            <Table.HeaderCell>BRANCH</Table.HeaderCell>\r\n            <Table.HeaderCell>BANK ID</Table.HeaderCell>\r\n            <Table.HeaderCell>ADDRESS</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n    \r\n        <Table.Body onClick={e=>{\r\n          if(e.target.dataset.bank){\r\n          history.push({\r\n           pathname:`/all-banks/${e.target.dataset.bank}`,\r\n           state:{city:city}\r\n          })}\r\n          if(e.target.dataset.favorite){\r\n            favoriteActionHandler(e.target.dataset.favorite)\r\n          }\r\n        }}>\r\n          {\r\n            paginatedData.map(bank => \r\n              <BankListRow bank={bank} key={bank.ifsc} />\r\n            )\r\n          }\r\n        </Table.Body>\r\n\r\n        <Table.Footer fullWidth>\r\n            <Table.Row>\r\n                <Table.HeaderCell colSpan='6'>\r\n                <span className='row-details'>Rows per page: \r\n                  <input type='text' \r\n                         value={paginatedData.length}\r\n                  /> \r\n                </span>\r\n               { !!Math.ceil(bankData.length/(rowSize)) &&(<Pagination \r\n                  totalPages={Math.ceil(bankData.length/(rowSize))} \r\n                  floated='right'\r\n                  activePage={activePage}\r\n                  onPageChange={handlePageChange}\r\n                  color={'grey'}\r\n                  inverted/>)}\r\n                </Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Footer>\r\n        </Table>\r\n       </Container>     \r\n        \r\n    )\r\n}\r\n\r\nexport default BankList;","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\n\r\nconst DropdownMenu = (props) => {\r\n    const {options, placeholder,value, ...others} = props;\r\n    const city = sessionStorage.getItem('city')\r\n    return(\r\n        <Dropdown\r\n            placeholder={placeholder}\r\n            search\r\n            selection\r\n            options={options}\r\n            {...others}\r\n             defaultValue={value==='city'?city:value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DropdownMenu; ","import React, {useState, useEffect} from 'react';\r\nimport {Container,Search} from 'semantic-ui-react';\r\nimport { CITY_OPTIONS, CATEGORIES, DEFAULT_CITY } from '../../components/constant';\r\nimport { getBankDetails} from '../../components/services.js';\r\nimport BankList from '../../components/bank-list/bank-list.component';\r\nimport DropdownMenu from '../../components/dropdown-menu/dropdown-menu.component';\r\n\r\nimport './homepage.styles.css';\r\n\r\nfunction Homepage() {\r\n\r\n  const [city, setCity] = useState(DEFAULT_CITY),\r\n  [originalData, setOriginalData] = useState([]),\r\n  [bankData, setBankData] = useState([]),\r\n  [category, setCategory] = useState(null),\r\n  [query, setQuery] = useState('')\r\n  \r\n  const transformData = (data) => {\r\n    return data.map(bank => {\r\n      const {bank_name,ifsc,branch,bank_id,address,city} = bank;\r\n      return {bank_name,ifsc,branch,bank_id,address,city,...{favorite:false}};\r\n    })\r\n  }\r\n const handleFavorite = (ifsc)=>{\r\n   const banks = JSON.parse(localStorage.getItem(`bank_details_${city}`))\r\n    banks.forEach(bank =>{\r\n      if(bank.ifsc===ifsc){\r\n        bank.favorite = !bank.favorite\r\n        let favoriteBanks = [];\r\n        \r\n        if(bank.favorite){\r\n          if(localStorage.getItem('favorite_banks')){\r\n            favoriteBanks = JSON.parse(localStorage.getItem('favorite_banks'))\r\n            favoriteBanks.push(bank)\r\n          }else{\r\n            favoriteBanks.push(bank)\r\n          }\r\n          localStorage.setItem('favorite_banks',JSON.stringify(favoriteBanks));\r\n        }else{\r\n          if(localStorage.getItem('favorite_banks')){\r\n            favoriteBanks = JSON.parse(localStorage.getItem('favorite_banks'))\r\n            let index = favoriteBanks.findIndex(bank=>bank.ifsc===ifsc)\r\n            favoriteBanks.splice(index,1)\r\n            localStorage.setItem('favorite_banks',JSON.stringify(favoriteBanks))\r\n          }\r\n        }\r\n      }   \r\n    })\r\n    \r\n    localStorage.setItem(`bank_details_${city}`,JSON.stringify(banks))\r\n    \r\n    setBankData(banks)\r\n    setOriginalData(banks)\r\n   \r\n }\r\n\r\n  useEffect(()=>{\r\n    if(sessionStorage.getItem('city'))\r\n    {\r\n      const data = sessionStorage.getItem('city')\r\n      setCity(data);\r\n    }\r\n  },[])\r\n  \r\n  useEffect(()=>{\r\n    sessionStorage.setItem('city',city)\r\n  },[city])\r\n\r\n  useEffect(() => {\r\n    getBankDetails(city)\r\n    .then(data => {\r\n      \r\n      const cacheData = JSON.parse(localStorage.getItem(`bank_details_${city}`))\r\n      if(!cacheData){\r\n        const modifiedData = transformData(data);\r\n        localStorage.setItem(`bank_details_${city}`,JSON.stringify(modifiedData))\r\n        setBankData(modifiedData)\r\n        setOriginalData(modifiedData)\r\n      }else{\r\n      setBankData(cacheData)\r\n      setOriginalData(cacheData)\r\n      }\r\n      \r\n    });\r\n  }, [city])\r\n\r\n  useEffect(() => {\r\n      if(!!category && !!query){\r\n        \r\n      const data =  originalData.filter(bank => { \r\n        if(category!=='bank_id'){\r\n          return bank[category].toLowerCase().includes(query.toLowerCase())\r\n        }else{\r\n          return JSON.stringify(bank[category]).includes(query)\r\n        }\r\n      })\r\n      setBankData(data)\r\n    }else{\r\n      setBankData(originalData)\r\n    }\r\n    \r\n  }, [query,setBankData,originalData,category])\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"table-header\">\r\n          <div>\r\n            <h2 style={{marginTop:'20px'}}>Banks in {city}</h2>\r\n          </div>\r\n          <div className='query-container'>      \r\n            <div className='query-fields'>\r\n              <DropdownMenu options={CITY_OPTIONS} \r\n                placeholder='Select City' \r\n                onChange={(e,data)=>{\r\n                  setCity(data.value)\r\n                  setQuery('')\r\n                }}\r\n                value='city'\r\n              />          \r\n            </div>\r\n            <div className='query-fields'>\r\n              <DropdownMenu options={CATEGORIES} \r\n                placeholder='Select Categorie' \r\n                onChange={(e,data) => {\r\n                setCategory(data.value)\r\n                setQuery('')\r\n                }}\r\n                value={category}\r\n                />\r\n            </div>\r\n            <div className='query-fields'>\r\n                <Search \r\n                  showNoResults={false}\r\n                  onSearchChange={(e,data)=>{\r\n                    setQuery(data.value)\r\n                  }}\r\n                  value={query}\r\n                  disabled={!category}\r\n                />\r\n            </div>\r\n          </div>\r\n        </div> \r\n        <BankList data={bankData} city={city} favoriteActionHandler={handleFavorite} query_string={query}/>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","const BASE_URL = 'https://vast-shore-74260.herokuapp.com'\r\n\r\n\r\nexport const getBankDetails = (city) => {\r\n   const getCacheData = localStorage.getItem(`bank_details_${city}`)\r\n   if(!!getCacheData){\r\n      const data = JSON.parse(getCacheData)\r\n      return Promise.resolve(data)\r\n   }\r\n   return fetch(`${BASE_URL}/banks?city=${city}`).then(response => response.json())\r\n} \r\n\r\n","import React from 'react';\r\nimport { useParams, useLocation } from 'react-router';\r\nimport { Container, Card } from 'semantic-ui-react';\r\n\r\n\r\nconst BankDetails = () => {\r\n\r\n    let { ifsc } = useParams();\r\n    let location = useLocation();\r\n    let banks = localStorage.getItem(`bank_details_${location.state.city}`);\r\n    \r\n    let foundBank = JSON.parse(banks).filter(bank => bank.ifsc === ifsc)\r\n    const {bank_name,branch,bank_id,address} = foundBank[0]\r\n\r\n    \r\n    return (\r\n        <Container textAlign='center' style={{height:'100vh'}}>\r\n        <Card style={{margin:\"auto\",marginTop:'150px'}} raised>\r\n            <Card.Content header={bank_name} />\r\n            <Card.Meta content={branch}/>\r\n            <Card.Content description={address} />\r\n            <Card.Content extra>\r\n                {ifsc}\r\n            </Card.Content>\r\n        </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BankDetails;","import React, {useState, useEffect} from 'react';\r\nimport {Container,Search} from 'semantic-ui-react';\r\nimport {CATEGORIES} from '../../components/constant.js'\r\nimport BankList from '../../components/bank-list/bank-list.component';\r\nimport DropdownMenu from '../../components/dropdown-menu/dropdown-menu.component';\r\n\r\n\r\nfunction Favorites() {\r\n\r\n  const [bankData, setBankData] = useState([])\r\n  \r\n  \r\n  useEffect(()=>{\r\n    let allFavouriteBanks = JSON.parse(localStorage.getItem('favorite_banks'))\r\n    setBankData(allFavouriteBanks);\r\n  },[])\r\n  \r\n  \r\n  const handleFavorite = (ifsc)=>{\r\n    const banks = JSON.parse(localStorage.getItem(`favorite_banks`))\r\n     banks.forEach(bank =>{\r\n       if(bank.ifsc===ifsc){\r\n         bank.favorite = !bank.favorite\r\n         let favoriteBanks = [];\r\n         \r\n         if(bank.favorite){\r\n           if(localStorage.getItem('favorite_banks')){\r\n             favoriteBanks = JSON.parse(localStorage.getItem('favorite_banks'))\r\n             favoriteBanks.push(bank)\r\n           }else{\r\n             favoriteBanks.push(bank)\r\n           }\r\n           localStorage.setItem('favorite_banks',JSON.stringify(favoriteBanks));\r\n         }else{\r\n           if(localStorage.getItem('favorite_banks')){\r\n             favoriteBanks = JSON.parse(localStorage.getItem('favorite_banks'))\r\n             let index = favoriteBanks.findIndex(bank=>bank.ifsc===ifsc)\r\n             favoriteBanks.splice(index,1)\r\n             setBankData(favoriteBanks)\r\n             localStorage.setItem('favorite_banks',JSON.stringify(favoriteBanks))\r\n             //Removing from bank list\r\n             const banks = JSON.parse(localStorage.getItem(`bank_details_${bank.city}`))\r\n             banks.forEach(bank=>{\r\n                 if(bank.ifsc===ifsc){\r\n                     bank.favorite=!bank.favorite\r\n                 }\r\n             })\r\n             localStorage.setItem(`bank_details_${bank.city}`,JSON.stringify(banks))\r\n           }\r\n         }\r\n       }   \r\n     })\r\n    }\r\n  \r\n \r\n  return (\r\n    <Container>\r\n      <div className=\"table-header\">\r\n          <div>\r\n            <h2 style={{marginTop:'20px'}}>FAVORITE BANKS</h2>\r\n          </div>\r\n         </div> \r\n        <BankList data={bankData} favoriteActionHandler={handleFavorite}/>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport SideMenu from './components/side-menu/side-menu.component'\nimport Homepage from './pages/homepage/homepage.component';\nimport BankDetails from './pages/bank-details/bank-details.component';\nimport Favorites from './pages/favorites/favorites.component'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideMenu/>\n      <Switch>\n        <Redirect exact from='/' to='/all-banks'/>\n        <Route exact path='/all-banks' component={Homepage} />\n        <Route exact path='/all-banks/:ifsc' component={BankDetails}/>\n        <Route path='/favorites' component={Favorites}/>\n      </Switch> \n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom' \nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App/>\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}